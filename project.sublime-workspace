{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"on",
				"on_song_click"
			],
			[
				"my",
				"my_new_number"
			],
			[
				"clas",
				"classList"
			],
			[
				"click",
				"clicked_song"
			],
			[
				"add",
				"add_numbers"
			],
			[
				"po",
				"pointer-events"
			],
			[
				"pro",
				"project"
			],
			[
				"tra",
				"translateY()"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"max-",
				"max-width"
			],
			[
				"Game",
				"GameState"
			],
			[
				"initi",
				"initial_asset_load_start"
			],
			[
				"r",
				"return"
			],
			[
				"main",
				"main_asset_load_start"
			],
			[
				"asset",
				"assets_loaded"
			],
			[
				"ini",
				"initial_assets_loaded"
			],
			[
				"_Vec",
				"_Vec4"
			],
			[
				"set",
				"set_uniform"
			],
			[
				"clear",
				"clear_screen"
			],
			[
				"rend",
				"render_target"
			],
			[
				"about",
				"about_gl"
			],
			[
				"back",
				"background"
			],
			[
				"win",
				"window"
			],
			[
				"ap",
				"aspect"
			],
			[
				"L",
				"LEVEL_2"
			],
			[
				"scene",
				"scenes_loaded"
			],
			[
				"LEVE",
				"LEVEL_1"
			],
			[
				"ab",
				"about_spin"
			],
			[
				"is",
				"is_touching"
			],
			[
				"to",
				"touches"
			],
			[
				"ca",
				"camera"
			],
			[
				"pr",
				"product_canvas"
			],
			[
				"abou",
				"about_state"
			],
			[
				"spra",
				"spray_can"
			],
			[
				"_V",
				"_Vec3"
			],
			[
				"rotate",
				"rotate_entity"
			],
			[
				"Vec",
				"Vec4"
			],
			[
				"ts",
				"test_canvas"
			],
			[
				"font-",
				"font-family"
			],
			[
				"las",
				"last_spray_charge"
			],
			[
				"spay_c",
				"spray_charge"
			],
			[
				"get",
				"get_url"
			],
			[
				"as",
				"asset_count"
			],
			[
				"e",
				"explode"
			],
			[
				"view",
				"view"
			],
			[
				"LEVEL",
				"LEVEL_END"
			],
			[
				"v",
				"volume_node"
			],
			[
				"spray",
				"spray_anchor"
			],
			[
				"root",
				"root_zoom"
			],
			[
				"ba",
				"bathroom"
			],
			[
				"bas",
				"baseB"
			],
			[
				"ass",
				"asset_count"
			],
			[
				"asse",
				"asset_count"
			],
			[
				"ne",
				"needs_update"
			],
			[
				"assets",
				"assets"
			],
			[
				"norm",
				"normal_matrix"
			],
			[
				"game",
				"game_info"
			],
			[
				"vec",
				"vec4"
			],
			[
				"camea",
				"camera"
			],
			[
				"camera",
				"camera_anchor"
			],
			[
				"Ga",
				"GameState"
			],
			[
				"u",
				"update"
			],
			[
				"right",
				"right_underarm"
			],
			[
				"el",
				"elevation"
			],
			[
				"eas",
				"easeOut"
			],
			[
				"res",
				"results"
			],
			[
				"re",
				"request"
			],
			[
				"Res",
				"Request"
			],
			[
				"mat",
				"mat4_mul"
			],
			[
				"cam",
				"cam_angle_x"
			],
			[
				"angl",
				"angle_x"
			],
			[
				"in",
				"instance_life"
			],
			[
				"co",
				"_color"
			],
			[
				"Gam",
				"GameScene"
			],
			[
				"can",
				"can_render"
			],
			[
				"fade",
				"fade_out"
			],
			[
				"INTRO",
				"INTRO_OUT"
			],
			[
				"from",
				"fromTo"
			],
			[
				"no",
				"normal"
			],
			[
				"norma",
				"normal_matrix"
			],
			[
				"GA",
				"GameState"
			],
			[
				"ani",
				"anims"
			],
			[
				"base",
				"basemesh"
			],
			[
				"bact",
				"bacteria_max"
			],
			[
				"bac",
				"bacteria_max"
			],
			[
				"shak",
				"shake_strength"
			],
			[
				"sp",
				"speed"
			],
			[
				"score",
				"score_indicator"
			],
			[
				"over",
				"overlay_t"
			],
			[
				"g",
				"game_info"
			],
			[
				"pos",
				"position"
			],
			[
				"shake",
				"shake_v"
			],
			[
				"color",
				"color_scheme"
			],
			[
				"polar",
				"polar_src"
			],
			[
				"scre",
				"screen_center"
			],
			[
				"scr",
				"screen_y"
			],
			[
				"rand",
				"rand_float"
			],
			[
				"strok",
				"stroke-dasharray"
			],
			[
				"spr",
				"spray_anchor"
			],
			[
				"lynx_",
				"lynx_black"
			],
			[
				"bacter",
				"bacteria_cap"
			],
			[
				"tex",
				"text-align"
			],
			[
				"char",
				"charge_pos"
			],
			[
				"AD",
				"AD_polite_load"
			],
			[
				"ad",
				"adHeader"
			],
			[
				"ex",
				"exit_url"
			],
			[
				"Grapk",
				"Graphik-Bold"
			],
			[
				"closer",
				"closer_w"
			],
			[
				"qu",
				"querySelector"
			],
			[
				"se",
				"selector"
			],
			[
				"anim",
				"anim_data"
			],
			[
				"dis",
				"display"
			],
			[
				"reset",
				"reset_button"
			],
			[
				"rec",
				"record_button"
			],
			[
				"inst",
				"instance_position"
			],
			[
				"_",
				"_Vec3"
			],
			[
				"cur",
				"current_projected"
			],
			[
				"st",
				"start_location"
			],
			[
				"de",
				"delta"
			],
			[
				"ve",
				"vertex"
			],
			[
				"start",
				"start_location"
			],
			[
				"font",
				"font-size"
			],
			[
				"lo",
				"locations"
			],
			[
				"curr",
				"current_tick"
			],
			[
				"time",
				"timestamp"
			],
			[
				"star",
				"start_location"
			],
			[
				"mat4_s",
				"mat4_stack"
			],
			[
				"LOG",
				"LOG_LEVEL"
			]
		]
	},
	"buffers":
	[
		{
			"file": "js/app.js",
			"settings":
			{
				"buffer_size": 8377,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "glsl/background.glsl",
			"settings":
			{
				"buffer_size": 374,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/utils.js",
			"settings":
			{
				"buffer_size": 3311,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 858,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "css/style.css",
			"settings":
			{
				"buffer_size": 936,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "glsl/wheels.glsl",
			"settings":
			{
				"buffer_size": 2333,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var app = \n{\n\tinit: false,\n\tassets:\n\t{\n\t\tmeshes: {},\n\t\ttextures: {},\n\t\tmaterials: {},\n\t\tload_count: 0,\n\t},\n};\n\nfunction preload()\n{\n\t// MESHES \n\tload_meshes(\n\t{\n\t\tbase: 'json/skateboard_base.json',\n\t\ttop: 'json/skateboard_top.json',\n\t\ttrucks: 'json/skateboard_trucks.json',\n\t\twheels: 'json/skateboard_wheels.json',\n\t});\n\n\t// TEXTURES \n\tload_textures(\n\t{\n\t\tblank: 'img/blank.png',\n\t\tlightmap: 'img/lightmap.png',\n\t\tshadow: 'img/shadow.jpg',\n\t\tenvmap: 'img/envmap.jpg',\n\t\tenvmap_blurred: 'img/env_blurred.jpg',\n\t\tboardA: 'img/boardA.png',\n\t});\n\n\t// SHADERS \n\tload_shader('background', 'glsl/background.glsl',\n\t{\n\t\tcolourA: {value: new THREE.Vector3(0.2,0.1,0.3,1) },\n\t\tcolourB: {value: new THREE.Vector3(0.2,0.1,0.3,1) },\n\t});\n\n\tload_shader('metal', 'glsl/wheels.glsl', \n\t{\n\t\tcolour: {value: new THREE.Vector4(1,1,1,1) },\n\t\tenvmap: {value: null},\n\t\tenvmap_blurred: {value: null},\n\t\tlightmap: {value: null},\n\t\tdiffuse: {value: null},\n\t\tshinyness: {value: 1.0},\n\t\thighlight: {value: 0.0},\n\t});\n\n\tload_shader('shadow', 'glsl/shadow.glsl',\n\t{\n\t\tshadow: {value: null },\n\t});\n}\nwindow.addEventListener('load', preload);\n\nfunction init() \n{\n\tapp.last_time = performance.now(); //@todo replace with Threejs clock thingy\n\n\tapp.input = Input();\n\tapp.scene = new THREE.Scene();\n\tapp.camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.01, 100);\n\tapp.camera.position.set(0,-0.08,3.3);\n\n\tapp.carousel = \n\t{\n\t\troot: new THREE.Group(),\n\t\titems: [],\n\t\tbackground: null,\n\t\tgradient: Gradient('#4972A8', '#132C65'),\n\t\tindex: 0,\n\t\tgap: 3.4, // @TODO work this out from camera projection\n\t\tcurrent_board: null,\n\t\tcurrent_component: null,\n\t\tspinning: false,\n\t};\n\n\tapp.colours = \n\t[\n\t\tGradient('#4972A8', '#132C65'),\n\t\tGradient('#8D1114', '#B31922'),\n\t\tGradient('#FFFB02', '#e0b200'),\n\t];\n\n\tvar carousel = app.carousel;\n\tvar meshes = app.assets.meshes;\n\tvar materials = app.assets.materials;\n\tvar textures = app.assets.textures;\n\n\ttextures.envmap_blurred.minFilter = THREE.LinearFilter;\n\ttextures.envmap_blurred.magFilter = THREE.LinearFilter;\n\ttextures.envmap_blurred.wrapS = THREE.RepeatWrapping;\n\ttextures.envmap_blurred.wrapT = THREE.RepeatWrapping;\n\n\tmaterials.shadow.uniforms.shadow.value = textures.shadow;\n\tmaterials.shadow.transparent = true;\n\n\tmeshes.shadow = new THREE.PlaneGeometry(2, 1);\n\n\t// BACKGROUND\n\n\tmeshes.quad = new THREE.PlaneGeometry(2, 2);\n\tmaterials.background.depthTest = false;\n\tmaterials.background.dithering = true;\n\n\tapp.carousel.background = new THREE.Mesh(meshes.quad, materials.background);\n\tapp.scene.add(app.carousel.background);\n\n\t// SKATEBOARDS\n\n\tvar num_skateboards = 3;\n\tfor(var i = 0; i < num_skateboards; ++i)\n\t{\n\t\tvar skateboard = {};\n\t\tskateboard.spin_velocity = 0;\n\n\t\tvar group = new THREE.Group();\n\t\tgroup.position.x = i * carousel.gap;\n\t\tgroup.rotation.set(0, radians(45), radians(-120));\n\t\tgroup.parent = carousel.root;\n\t\tskateboard.group = group;\n\n\t\t// TOP OF SKATEBOARD\n\t\tvar top_material = materials.metal.clone();\n\t\ttop_material.setAll\n\t\t({\n\t\t\tcolour: new THREE.Vector3(0.2,0.2,0.2),\n\t\t\tlightmap: textures.lightmap,\n\t\t\tdiffuse: textures.blank,\n\t\t\tenvmap: textures.envmap,\n\t\t\tenvmap_blurred: textures.envmap_blurred,\n\t\t\tshinyness: 0.0,\n\t\t});\n\t\tskateboard.top = new THREE.Mesh(meshes.top, top_material);\n\t\tskateboard.top.name = 'top';\n\t\tgroup.add(skateboard.top);\n\n\t\t// BASE OF SKATEBOARD\n\t\tvar base_material = materials.metal.clone();\n\t\tbase_material.setAll\n\t\t({\n\t\t\tlightmap: textures.lightmap,\n\t\t\tdiffuse: textures.boardA,\n\t\t\tenvmap: textures.envmap,\n\t\t\tenvmap_blurred: textures.envmap_blurred,\n\t\t\tshinyness: 0.1,\n\t\t});\n\t\tskateboard.base = new THREE.Mesh(meshes.base, base_material);\n\t\tskateboard.base.name = 'base';\n\t\tgroup.add(skateboard.base);\n\n\t\t// WHEELS\n\t\tvar wheel_material = materials.metal.clone();\n\t\twheel_material.setAll\n\t\t({\n\t\t\tcolour: new THREE.Vector3(0.1,0.1,0.11),\n\t\t\tlightmap: textures.lightmap,\n\t\t\tdiffuse: textures.blank,\n\t\t\tenvmap: textures.envmap,\n\t\t\tenvmap_blurred: textures.envmap_blurred,\n\t\t\tshinyness: 0.8,\n\t\t});\n\t\tskateboard.wheels = new THREE.Mesh(meshes.wheels, wheel_material);\n\t\tskateboard.wheels.name = 'wheels';\n\t\tgroup.add(skateboard.wheels);\n\n\t\t// TRUCKS\n\t\tvar truck_material = materials.metal.clone();\n\t\ttruck_material.setAll\n\t\t({\n\t\t\tcolour: new THREE.Vector3(0.4,0.4,0.4),\n\t\t\tlightmap: textures.lightmap,\n\t\t\tdiffuse: textures.blank,\n\t\t\tenvmap: textures.envmap,\n\t\t\tenvmap_blurred: textures.envmap_blurred,\n\t\t\tshinyness: 1.0,\n\t\t});\n\t\tskateboard.trucks = new THREE.Mesh(meshes.trucks, truck_material);\n\t\tskateboard.trucks.name = 'trucks';\n\t\tgroup.add(skateboard.trucks);\n\n\t\t// SHADOW\n\t\tvar shadow_material = materials.shadow;\n\t\tskateboard.shadow = new THREE.Mesh(meshes.shadow, shadow_material);\n\t\tskateboard.shadow.rotation.x = radians(90);\n\t\tskateboard.shadow.rotation.y = radians(-60);\n\t\tskateboard.shadow.position.x = 1.0;\n\t\tskateboard.shadow.position.y = 1.0;\n\n\t\tskateboard.trucks.name = 'shadow';\n\t\tgroup.add(skateboard.shadow);\n\n\t\tcarousel.items.push(skateboard);\n\t\tcarousel.root.add(group);\n\t}\n\n\tapp.scene.add(carousel.root);\n\n\n\t// RAYCASTING\n\n\tapp.raycaster = new THREE.Raycaster();\n\n\t// COLOUR PICKER\n\t/*\n\tapp.picker = document.querySelector('.colour-picker');\n\tapp.picker.addEventListener('change', function(e)\n\t{\n\t\tvar component = app.carousel.current_component;\n\t\tif(!component) return;\n\t\tvar colour = component.material.uniforms.colour.value;\n\t\thex_to_rgb(colour, e.target.value, true);\n\t});\n\t*/\n\n\t// LEFT / RIGHT BUTTONS\n\n\tvar button_left = document.querySelector('.carousel-button.left');\n\tvar button_right = document.querySelector('.carousel-button.right');\n\tbutton_left.addEventListener('click', carousel_prev);\n\tbutton_right.addEventListener('click', carousel_next);\n\n\t// START RENDERER\n\n\tapp.renderer = new THREE.WebGLRenderer({antialias: true});\n\tapp.renderer.setSize(window.innerWidth, window.innerHeight);\n\tdocument.querySelector('.webgl').appendChild(app.renderer.domElement);\n\n\tapp.init = true;\n}\n\nfunction carousel_next()\n{\n\tvar carousel = app.carousel;\n\tcarousel.index ++;\n\tcarousel.current_component = null;\n\tcarousel.index = clamp(carousel.index, 0, carousel.items.length-1);\n\tcarousel.current_board = carousel.items[carousel.index];\n}\n\nfunction carousel_prev()\n{\n\tvar carousel = app.carousel;\n\tcarousel.index --;\n\tcarousel.current_component = null;\n\tcarousel.index = clamp(carousel.index, 0, carousel.items.length-1);\n\tcarousel.current_board = carousel.items[carousel.index];\n}\n\nfunction update(t)\n{\n\trequestAnimationFrame(update);\n\t\n\tvar dt = (t - app.last_time) / 1000;\n\tapp.last_time = t;\n\n\tif(app.assets_loaded === false) return;\n\n\tvar carousel = app.carousel;\n\tcarousel.current_board = carousel.items[carousel.index];\n\n\tvar camera = app.camera;\n\tdebug_camera_movement(camera, dt);\n\n\t// Raycasting\n\n\tfor(var i = 0; i < carousel.items.length; ++i)\n\t{\n\t\tvar children = carousel.items[i].group.children;\n\t\tfor(var j = 0; j < children.length; ++j)\n\t\t{\n\t\t\tvar child = children[j];\n\t\t\tif(child.material.uniforms.highlight)\n\t\t\t\tchild.material.uniforms.highlight.value = 0.0;\n\t\t}\n\t}\n\n\tvar normalized_mouse = new THREE.Vector3();\n\tscreen_to_normalized_device(normalized_mouse, input.mouse.position);\n\tapp.raycaster.setFromCamera(normalized_mouse, camera);\n\tvar intersects = app.raycaster.intersectObjects(carousel.current_board.group.children, true);\n\tif(intersects.length > 0)\n\t{\n\t\tvar hit = intersects[0];\n\n\t\tif(key_down(Keys.MOUSE_LEFT))\n\t\t{\n\t\t\tcarousel.can_spin = true;\n\t\t\tcarousel.current_component = hit.object;\n\n\t\t\tswitch(hit.object.name)\n\t\t\t{\n\t\t\t\tcase 'base':\n\t\t\t\t{\n\t\t\t\t\t//show texture picker\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'wheels':\n\t\t\t\t{\n\t\t\t\t\t//show colour picker\n\t\t\t\t\tcarousel.current_board.spin_velocity = 0;\n\t\t\t\t\tvar point = new THREE.Vector3();\n\t\t\t\t\tworld_to_screen(point, hit.point, app.camera);\n\t\t\t\t\t\n\t\t\t\t\tapp.picker.style.transform = 'translate(' + point.x + 'px, ' + point.y + 'px)';\n\t\t\t\t\tapp.picker.click();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'trucks':\n\t\t\t\t{\n\t\t\t\t\t//show colour picker\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(hit.object.material.uniforms.highlight)\n\t\t\thit.object.material.uniforms.highlight.value = 1.0;\n\t}\n\n\n\t// Keyboard cycling\n\n\tif(key_down(Keys.LEFT)) carousel_prev();\n\tif(key_down(Keys.RIGHT)) carousel_next();\n\n\tif(key_down(Keys.MOUSE_LEFT) &! carousel.spinning)\n\t{\n\t\tcarousel.spinning = true;\t\n\t}\n\tif(key_up(Keys.MOUSE_LEFT))\n\t{\n\t\tif(carousel.spinning)\n\t\t{\n\t\t\tcarousel.current_board.spin_velocity = input.mouse.delta.x * dt;\n\t\t}\n\t\tcarousel.spinning = false;\n\t}\n\n\tif(carousel.spinning)\n\t{\n\t\tcarousel.current_board.spin_velocity = input.mouse.delta.x * dt;\n\t}\n\n\tcarousel.current_board.group.rotation.y += carousel.current_board.spin_velocity;\n\tcarousel.current_board.spin_velocity *= 0.91;\n\n\tcarousel.index = clamp(carousel.index, 0, carousel.items.length-1);\n\tcarousel.root.position.x = THREE.Math.lerp(carousel.root.position.x, -carousel.index * carousel.gap, dt * 5.0);\n\n\t\n\tfor(var i = 0; i < carousel.items.length; ++i)\n\t{\n\t\tvar item = carousel.items[i].group;\n\n\t\tvar scale = item.scale.x;\n\t\tif(i === carousel.index)\n\t\t{\n\t\t\titem.position.z = THREE.Math.lerp(item.position.z, 1.0, dt * 5.0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\titem.position.z = THREE.Math.lerp(item.position.z, 0.0, dt * 5.0);\n\t\t}\n\t}\n\n\n\t// ANIMATE BACKGROUND GRADIENT\n\n\tvar current_grad = app.colours[carousel.index];\n\tblend_gradient(carousel.gradient, carousel.gradient, current_grad, dt * 5.0);\n\tcarousel.background.material.uniforms.colourA.value = carousel.gradient.a;\n\tcarousel.background.material.uniforms.colourB.value = carousel.gradient.b;\n\n\trender();\n\tupdate_input();\n}\n\nfunction render() \n{\n\tapp.renderer.render(app.scene, app.camera);\n}\n\n",
			"settings":
			{
				"buffer_size": 9540,
				"line_ending": "Windows"
			}
		},
		{
			"file": "glsl/debug.glsl",
			"settings":
			{
				"buffer_size": 144,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 129.0,
		"last_filter": "Package Control: install",
		"selected_items":
		[
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"Package Control: dis",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Package Control:d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			],
			[
				"da",
				"DataConverter: to Python dict"
			],
			[
				"data",
				"DataConverter: to JSON"
			],
			[
				"preyy",
				"Pretty JSON: Minify (compress) JSON"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 520.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			" import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/webdev/headphones"
	],
	"file_history":
	[
		"/C/webdev/headphones/glsl/base.glsl",
		"/C/webdev/headphones/json/casing.json",
		"/C/webdev/webgl_workshop/css/style.css",
		"/C/webdev/webgl_workshop/glsl/wheels.glsl",
		"/C/webdev/webgl_workshop/js/utils.js",
		"/C/webdev/webgl_workshop/index.html",
		"/C/webdev/f2018/src/glslc/gamma.glslc",
		"/C/webdev/PBR/src/common/reflection.glsl",
		"/C/webdev/webgl/src/js/socket.js",
		"/C/webdev/webgl_workshop/js/app.js",
		"/C/webdev/f2018/build/style.css",
		"/C/webdev/webgl/src/js/socket_client.js",
		"/C/webdev/f2018/src/glslc/pi.glslc",
		"/C/webdev/f2018/src/glslc/desaturate.glslc",
		"/C/webdev/f2018/src/glslc/envmap.glslc",
		"/C/webdev/webgl_workshop/svg/arrow.svg",
		"/C/Users/garet/Desktop/sppedpaint",
		"/C/webdev/webgl_workshop/glsl/background.glsl",
		"/C/webdev/webgl/src/glsl/diffuse.glsl",
		"/C/webdev/f2018/src/glslc/colour_normals.glslc",
		"/C/webdev/webgl/src/glsl/components/fresnel.glslc",
		"/C/webdev/webgl_workshop/glsl/vignette.glsl",
		"/C/webdev/webgl_workshop/glsl/matcap.glsl",
		"/C/webdev/webgl_workshop/glsl/base.glsl",
		"/C/webdev/f2018/src/js/colour_conversion.js",
		"/C/webdev/webgl_workshop/glsl/normals.glsl",
		"/C/webdev/webgl_workshop/.gitignore",
		"/C/webdev/lynx/burst/src/glsl/matcap.glsl",
		"/C/webdev/webgl/src/glsl/components/colour_normals.glslc",
		"/C/webdev/three/js/input.js",
		"/C/webdev/f2018/src/js/serialise.js",
		"/C/webdev/three/app.js",
		"/Users/gareth/Documents/Design/Unilever/Axe Packs/180214 DARK MATTER AEROSOL.obj",
		"/Users/gareth/Documents/Design/Unilever/Axe Packs/180214 Polaris Firestarter Stick.obj",
		"/Users/gareth/Documents/Design/Unilever/Axe Packs/180214 Galileo Male Roll On.obj",
		"/Users/gareth/Sites/Yna/index.html",
		"/Users/gareth/Sites/Yna/css/style.css",
		"/Users/gareth/Sites/Yna/js/main.js",
		"/Users/gareth/Desktop/JS_cheat_sheet.js",
		"/Users/gareth/Desktop/aksjndoasndasnldasldnlaksnd.txt",
		"/Users/gareth/Sites/Pages/lynx-game/ui/src/index.html",
		"/Users/gareth/Sites/f2018/src/js/audio.js",
		"/Users/gareth/Sites/f2018/src/js/ui.js",
		"/Users/gareth/Sites/f2018/src/js/work.js",
		"/Users/gareth/Sites/sc/index.html",
		"/Users/gareth/Sites/f2018/src/js/flow.js",
		"/Users/gareth/Sites/f2018/src/js/sound_cloud.js",
		"/Users/gareth/Sites/f2018/src/js/app.js",
		"/Users/gareth/Sites/sc/style.css",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/render.js",
		"/Users/gareth/Sites/Pages/lynx-game/ui/src/components/Sound.js",
		"/Users/gareth/Desktop/analyser.js",
		"/Users/gareth/Sites/sc/email.txt",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/webgl.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/manifest.js",
		"/Users/gareth/Desktop/gl_state.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/main.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/mesh.js",
		"/Users/gareth/Sites/burst/build/style.css",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/render_target.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/main/glsl/can.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/src/main/glsl/final.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/shader.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/main/glsl/background.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/serialise.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/particles.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/input.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/debug.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/initial/matcap.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/texture.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/main/glsl/final.vs",
		"/Users/gareth/Sites/f2018/src/js/texture.js",
		"/Users/gareth/Sites/f2018/src/js/webgl.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/assets.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/audio.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/camera.js",
		"/Users/gareth/Sites/Pages/lynx-game/build/js/gsap-lite.js",
		"/Users/gareth/Downloads/greensock-js 2/src/minified/plugins/RoundPropsPlugin.min.js",
		"/Users/gareth/Downloads/greensock-js 2/src/minified/plugins/CSSPlugin.min.js",
		"/Users/gareth/Downloads/greensock-js 2/src/minified/plugins/TextPlugin.min.js",
		"/Users/gareth/Downloads/greensock-js 2/src/minified/easing/EasePack.min.js",
		"/Users/gareth/Downloads/greensock-js 2/TweenLite.min.js",
		"/Users/gareth/Downloads/greensock-js 2/TimelineLite.min.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/projection.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/math.js",
		"/Users/gareth/Sites/f2018/build/style.css",
		"/Users/gareth/Downloads/f2018/src/js/webgl.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/entity.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/quaternion.js",
		"/Users/gareth/Sites/Pages/lynx-game/build.py",
		"/Users/gareth/Sites/Pages/lynx-game/ui/src/components/App/App.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/main/glsl/bacteria.glsl",
		"/Users/gareth/Sites/burst/src/js/webgl.js",
		"/Users/gareth/Sites/Pages/lynx-game/ui/src/routes/main-menu.js",
		"/Users/gareth/Sites/Pages/lynx-game/ui/src/constants.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/utils.js",
		"/Users/gareth/Sites/burst/src/js/app.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/js/time.js",
		"/Users/gareth/Sites/Pages/lynx-game/ui/src/components/Paused.js",
		"/Users/gareth/Sites/Pages/lynx-game/src/glsl/noise.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/src/glsl/fade.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/src/glsl/matcap.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/src/glsl/menu.glsl",
		"/Users/gareth/Sites/burst/build/index.html",
		"/Users/gareth/Sites/Pages/lynx-game/src/glsl/spray_hit.glsl",
		"/Users/gareth/Sites/Pages/lynx-game/ui/node_modules/caniuse-lite/data/features/canvas.js",
		"/Users/gareth/Sites/ghd-ad-banners/build_production/easygym_rejoining/160x600/160x600.html",
		"/Users/gareth/Sites/ghd-ad-banners/build_production/easygym_rejoining/300x250/300x250.html",
		"/Users/gareth/Sites/ghd-ad-banners/build_production/easygym_rejoining/300x600/300x600.html",
		"/Users/gareth/Sites/ghd-ad-banners/build_production/easygym_rejoining/320x50/320x50.html",
		"/Users/gareth/Sites/ghd-ad-banners/build_production/easygym_rejoining/728x90/728x90.html",
		"/Users/gareth/Sites/Pages/lynx-game/frontend-2.0/src/components/App/App.js",
		"/Users/gareth/Sites/Pages/lynx-game/frontend-2.0/src/routes/leaderboard.js",
		"/Users/gareth/Sites/ghd-ad-banners/src/easygym_rejoining/160x600/160x600.html",
		"/Users/gareth/Sites/Pages/lynx-game/.gitignore",
		"/Users/gareth/Sites/Pages/lynx-game/frontend-2.0/src/routes/main-menu.js",
		"/Users/gareth/Sites/burst/src/js/mesh.js",
		"/Users/gareth/Sites/burst/src/js/quaternion.js",
		"/Users/gareth/Sites/burst/src/js/mat3.js",
		"/Users/gareth/Sites/burst/src/js/serialise.js",
		"/Users/gareth/Sites/burst/src/js/random.js",
		"/Users/gareth/Sites/burst/src/js/texture.js",
		"/Users/gareth/Sites/burst/src/js/assets.js",
		"/Users/gareth/Sites/burst/src/js/projection.js",
		"/Users/gareth/Sites/burst/src/js/mat4.js",
		"/Users/gareth/Sites/burst/src/js/entity.js",
		"/Users/gareth/Sites/burst/src/js/manifest.js",
		"/Users/gareth/Sites/burst/src/js/math.js"
	],
	"find":
	{
		"height": 60.0
	},
	"find_in_files":
	{
		"height": 111.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"diffuse",
			"normals",
			"ver",
			"last_time"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"albedo",
			"last_tick"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "js/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8377,
						"regions":
						{
						},
						"selection":
						[
							[
								6145,
								6145
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6885.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "glsl/background.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 374,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "js/utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3311,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3483.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 858,
						"regions":
						{
						},
						"selection":
						[
							[
								262,
								262
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "css/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 936,
						"regions":
						{
						},
						"selection":
						[
							[
								483,
								483
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 972.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "glsl/wheels.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2333,
						"regions":
						{
						},
						"selection":
						[
							[
								2299,
								2299
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1620.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9540,
						"regions":
						{
						},
						"selection":
						[
							[
								9540,
								9540
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 9551.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "glsl/debug.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 144,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.exec":
	{
		"height": 184.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/gazzyb.sublime-build",
	"project": "project.sublime-project",
	"replace":
	{
		"height": 108.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"back",
				"glsl\\background.glsl"
			],
			[
				"ut",
				"js\\utils.js"
			],
			[
				"bas",
				"glsl\\base.glsl"
			],
			[
				"sty",
				"css\\style.css"
			],
			[
				"inde",
				"index.html"
			],
			[
				"wh",
				"glsl\\wheels.glsl"
			],
			[
				"app",
				"js\\app.js"
			],
			[
				"style",
				"css\\style.css"
			],
			[
				"whee",
				"glsl\\wheels.glsl"
			],
			[
				"css",
				"css\\style.css"
			],
			[
				"mat",
				"glsl\\matcap.glsl"
			],
			[
				"uti",
				"js\\utils.js"
			],
			[
				"in",
				"js\\input.js"
			],
			[
				"ui",
				"js\\utils.js"
			],
			[
				"soun",
				"ui/src/components/Sound.js"
			],
			[
				"aud",
				"src/js/audio.js"
			],
			[
				"gl_draw",
				"src/js/gl_draw.js"
			],
			[
				"render",
				"src/js/render.js"
			],
			[
				"matcap",
				"src/initial/matcap.glsl"
			],
			[
				"glsl",
				"src/initial/matcap.glsl"
			],
			[
				"input",
				"src/js/input.js"
			],
			[
				"debug",
				"src/js/debug.js"
			],
			[
				"bui",
				"build.py"
			],
			[
				"final",
				"src/main/glsl/final.glsl"
			],
			[
				"text",
				"src/js/texture.js"
			],
			[
				"mani",
				"src/js/manifest.js"
			],
			[
				"main",
				"src/js/main.js"
			],
			[
				"assets",
				"src/js/assets.js"
			],
			[
				"ass",
				"src/js/assets.js"
			],
			[
				"sha",
				"src/js/shader.js"
			],
			[
				"can",
				"src/main/glsl/can.glsl"
			],
			[
				"seri",
				"src/js/serialise.js"
			],
			[
				"audio",
				"src/js/audio.js"
			],
			[
				"sound",
				"ui/src/components/Sound.js"
			],
			[
				"mesh",
				"src/js/mesh.js"
			],
			[
				"shad",
				"src/js/shader.js"
			],
			[
				"shader",
				"src/js/shader.js"
			],
			[
				"tex",
				"src/js/texture.js"
			],
			[
				"buil",
				"build.py"
			],
			[
				"index.html",
				"ui/src/index.html"
			],
			[
				"math",
				"src/js/math.js"
			],
			[
				"deb",
				"src/js/debug.js"
			],
			[
				"pro",
				"src/js/projection.js"
			],
			[
				"matca",
				"src/initial/matcap.glsl"
			],
			[
				"can.",
				"src/main/glsl/can.glsl"
			],
			[
				"camera",
				"src/js/camera.js"
			],
			[
				"qua",
				"src/js/quaternion.js"
			],
			[
				"ent",
				"src/js/entity.js"
			],
			[
				"debu",
				"src/js/debug.js"
			],
			[
				"inpu",
				"src/js/input.js"
			],
			[
				"util",
				"src/js/utils.js"
			],
			[
				"bacter",
				"src/main/glsl/bacteria.glsl"
			],
			[
				"bac",
				"src/main/glsl/bacteria.glsl"
			],
			[
				"part",
				"src/js/particles.js"
			],
			[
				"time",
				"src/js/time.js"
			],
			[
				"came",
				"src/js/camera.js"
			],
			[
				"par",
				"src/js/particles.js"
			],
			[
				"au",
				"src/js/audio.js"
			],
			[
				"we",
				"src/js/webgl.js"
			],
			[
				"en",
				"src/js/entity.js"
			],
			[
				"noise",
				"src/glsl/noise.glsl"
			],
			[
				"fade",
				"src/glsl/fade.glsl"
			],
			[
				"web",
				"src/js/webgl.js"
			],
			[
				"level",
				"src/js/levels.js"
			],
			[
				"webgl",
				"src/js/webgl.js"
			],
			[
				"canvas",
				"ui/node_modules/caniuse-lite/data/features/canvas.js"
			],
			[
				"webg",
				"src/js/webgl.js"
			],
			[
				"mat4",
				"src/js/mat4.js"
			],
			[
				"quat",
				"src/js/quaternion.js"
			],
			[
				"mat3",
				"src/js/mat3.js"
			],
			[
				"serial",
				"src/js/serialise.js"
			],
			[
				"rand",
				"src/js/random.js"
			],
			[
				"asse",
				"src/js/assets.js"
			],
			[
				"m",
				"src/js/mat4.js"
			],
			[
				"p",
				"src/js/projection.js"
			],
			[
				"enti",
				"src/js/entity.js"
			],
			[
				"proj",
				"src/js/projection.js"
			],
			[
				"vector",
				"src/js/vector.js"
			],
			[
				"de",
				"src/js/debug.js"
			],
			[
				"rad",
				"src/js/random.js"
			],
			[
				"leve",
				"src/js/levels.js"
			],
			[
				"st",
				"build/style.css"
			],
			[
				"col",
				"src/js/color_schemes.js"
			],
			[
				"ser",
				"src/js/serialise.js"
			],
			[
				"",
				"src/js/projection.js"
			],
			[
				"entity",
				"src/js/entity.js"
			],
			[
				"vec",
				"src/js/vector.js"
			],
			[
				"spark",
				"src/glsl/spark.glsl"
			],
			[
				"spar",
				"src/glsl/spark.glsl"
			],
			[
				"spray",
				"src/glsl/spray_hit.glsl"
			],
			[
				"tim",
				"src/js/time.js"
			],
			[
				"simpl",
				"src/glsl/components/simplex_noise.glslc"
			],
			[
				"qu",
				"src/js/quaternion.js"
			],
			[
				"colo",
				"src/js/colour_conversion.js"
			],
			[
				"over",
				"src/glsl/overlay.glsl"
			],
			[
				"mat2",
				"src/glsl/components/mat2.glslc"
			],
			[
				"color",
				"src/js/color_schemes.js"
			],
			[
				"inp",
				"src/js/input.js"
			],
			[
				"ca",
				"src/js/camera.js"
			],
			[
				"basi",
				"src/glsl/basic.glsl"
			],
			[
				"anim",
				"src/html/animation.html"
			],
			[
				"gl_",
				"src\\js\\gl_draw.js"
			],
			[
				"quater",
				"src\\js\\quaternion.js"
			],
			[
				"rig",
				"src\\js\\rig.js"
			],
			[
				"cam",
				"src\\js\\camera.js"
			],
			[
				"gl",
				"src\\js\\gl_draw.js"
			],
			[
				"styl",
				"build\\css\\style.css"
			],
			[
				"as",
				"src\\js\\assets.js"
			],
			[
				"seria",
				"src\\js\\serialise.js"
			],
			[
				"build",
				"build.bat"
			],
			[
				"inst",
				"src/glsl/instance.glsl"
			],
			[
				"cube",
				"src/js/cube.js"
			],
			[
				"map",
				"src/js/map.js"
			],
			[
				"index",
				"src/html/index.html"
			],
			[
				"flat",
				"src/glsl/flat.glsl"
			],
			[
				"entit",
				"src\\js\\entity.js"
			],
			[
				"grad",
				"src/glsl/grading.glsl"
			],
			[
				"quad",
				"src/js/quad.js"
			],
			[
				"bu",
				"build.sh"
			],
			[
				"ve",
				"src/js/vector.js"
			],
			[
				"sta",
				"src\\js\\stack.js"
			],
			[
				"py",
				"build.py"
			],
			[
				"dec",
				"src\\js\\deck.js"
			],
			[
				"cir",
				"src\\assets\\circle_mask.glsl"
			],
			[
				"pr",
				"src\\js\\webgl\\projection.js"
			],
			[
				"circ",
				"src\\assets\\circle_mask.glsl"
			],
			[
				"ran",
				"src\\js\\webgl\\random.js"
			],
			[
				"te",
				"src\\js\\webgl\\texture.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 750.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\webdev\\f2018\\project.sublime-project"
			]
		],
		"width": 570.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 200.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
